name: Build Windows Application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build Windows Executable
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller playwright

    - name: Install Playwright Browsers
      run: |
        python -m playwright install chromium
        python -m playwright install-deps

    - name: Check Playwright Setup
      run: python -c "from playwright.sync_api import sync_playwright; print('Playwright initialized')"

    - name: Patch Chromium Executable Function
      shell: pwsh
      run: |
        Remove-Item -Path "data_extractor\get_exact_pg.py" -ErrorAction Ignore
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "import os"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "import sys"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "import logging"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value \"`nlogger = logging.getLogger(__name__)\"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value \"`ndef find_chromium_executable():\"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "    try:"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "        if hasattr(sys, '_MEIPASS'):"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "            return os.path.join(sys._MEIPASS, 'playwright', 'chromium-*', 'chrome.exe')"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "        # fallback code here if needed"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "    except Exception as e:"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "        logger.error(f'Error finding Chromium executable: {e}')"
        Add-Content -Path "data_extractor\get_exact_pg.py" -Value "        raise"

    - name: Build Executable with PyInstaller
      shell: pwsh
      run: |
        pyinstaller --onefile --windowed `
          --hidden-import playwright `
          --hidden-import playwright.sync_api `
          --hidden-import playwright.async_api `
          --collect-all playwright `
          --icon icon.ico `
          main.py

    - name: Upload Executable Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist/*.exe
